//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication_ChainStores.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChainStoresEntities : DbContext
    {
        public ChainStoresEntities()
            : base("name=ChainStoresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Orders_Details_Store> Orders_Details_Store { get; set; }
        public virtual DbSet<Orders_Details_Suppliers> Orders_Details_Suppliers { get; set; }
        public virtual DbSet<Orders_Stores> Orders_Stores { get; set; }
        public virtual DbSet<Orders_Suppliers> Orders_Suppliers { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductAvailability_Stores> ProductAvailability_Stores { get; set; }
        public virtual DbSet<ProductAvailability_Suppliers> ProductAvailability_Suppliers { get; set; }
        public virtual DbSet<Registration> Registration { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Stores> Stores { get; set; }
        public virtual DbSet<Suppliers> Suppliers { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<orderChainStores_Result> orderChainStores(Nullable<System.DateTime> dateOrder)
        {
            var dateOrderParameter = dateOrder.HasValue ?
                new ObjectParameter("dateOrder", dateOrder) :
                new ObjectParameter("dateOrder", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<orderChainStores_Result>("orderChainStores", dateOrderParameter);
        }
    
        public virtual ObjectResult<productNotStore_Result> productNotStore(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<productNotStore_Result>("productNotStore", storeidParameter);
        }
    
        public virtual ObjectResult<productNotSupplier_Result> productNotSupplier(Nullable<int> supid)
        {
            var supidParameter = supid.HasValue ?
                new ObjectParameter("supid", supid) :
                new ObjectParameter("supid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<productNotSupplier_Result>("productNotSupplier", supidParameter);
        }
    
        public virtual ObjectResult<productSupplier_Result> productSupplier(Nullable<int> supid)
        {
            var supidParameter = supid.HasValue ?
                new ObjectParameter("supid", supid) :
                new ObjectParameter("supid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<productSupplier_Result>("productSupplier", supidParameter);
        }
    }
}
